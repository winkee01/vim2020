snippet incc "" !b
#include <iostream>$0
endsnippet
snippet incs "" !b
#include <string>
endsnippet
snippet incsv "" !b
#include <string_view>
endsnippet
snippet incss "" !b
#include <sstream>
endsnippet
snippet incv "" !b
#include <vector>
endsnippet
snippet inca "" !b
#include <array>
endsnippet
snippet incst "" !b
#include <stack>
endsnippet
snippet incq "" !b
#include <queue>
endsnippet
snippet incl "" !b
#include <list>
endsnippet
snippet incde "" !b
#include <deque>
endsnippet
snippet incm "" !b
#include <map>
endsnippet
snippet incum "" !b
#include <unordered_map>
endsnippet
snippet incse "" !b
#include <set>
endsnippet
snippet incus "" !b
#include <unordered_set>
endsnippet
snippet inct "" !b
#include <thread>
endsnippet
snippet incmu "" !b
#include <mutex>$0
endsnippet
snippet inccv "" !b
#include <condition_variable>
endsnippet
snippet incft "" !b
#include <future>
endsnippet
snippet incfun "" !b
#include <functional>
endsnippet
snippet incch "" !b
#include <chrono>
endsnippet
snippet incr "" !b
#include <random>
endsnippet
snippet incal "" !b
#include <algorithm>
endsnippet
snippet incli "" !b
#include <limits>
endsnippet
snippet incn "" !b
#include <numeric>
endsnippet
snippet incit "" !b
#include <iterator>
endsnippet
snippet incu "" !b
#include <utility>
endsnippet
snippet incbi "" !b
#include <bitset>
endsnippet
snippet inch "" !b
#include "$1"
endsnippet
snippet inc> "" !b
#include <$1>
endsnippet

snippet class "class" !b
class ${1:Class}{
public:
    $1();
    $1(const $1&);
    $1& operator=(const $1&);
    ~$1();
    $2
private:
    $3
};
endsnippet
snippet struct "struct" !b
struct ${1:Struct}{
    $2
};$0
endsnippet
snippet if
if {
    ${VISUAL}
}
endsnippet
snippet ifelse
if else {
    ${VISUAL}
}
endsnippet
snippet v< "" !wi
vector<${1:int}>
endsnippet
snippet vi< "" !wi
vector<int>
endsnippet
snippet v<& "" !wi
vector<${1:int}>&
endsnippet
snippet vi<& "" !wi
vector<int>&
endsnippet
snippet vi&< "" !wi
vector<int>&
endsnippet
snippet cvi&< "" !wi
const vector<int>&
endsnippet
snippet vic&< "" !wi
const vector<int>&
endsnippet
snippet vv< "" !wi
vector<vector<${1:int}>>
endsnippet
snippet vvi< "" !wi
vector<vector<int>>
endsnippet
snippet vvi<& "" !wi
vector<vector<int>>&
endsnippet
snippet vvi&< "" !wi
vector<vector<int>>&
endsnippet
snippet vii< "" !wi
vector<pair<int, int>>&
endsnippet
snippet vic< "" !wi
vector<pair<int, char>>&
endsnippet
snippet vci< "" !wi
vector<pair<char, int>>&
endsnippet

snippet vd< "" !wi
vector<double>
endsnippet
snippet vd&< "" !wi
vector<double>&
endsnippet
snippet vvd< "" !wi
vector<vector<double>>
endsnippet
snippet vvd<& "" !wi
vector<vector<double>>&
endsnippet
snippet vvd&< "" !wi
vector<vector<double>>&
endsnippet

snippet vb< "" !wi
vector<bool>
endsnippet
snippet vb&< "" !wi
vector<bool>&
endsnippet
snippet vvb< "" !wi
vector<vector<bool>>
endsnippet
snippet vvb<& "" !wi
vector<vector<bool>>&
endsnippet

snippet vc< "" !wi
vector<char>
endsnippet
snippet vc&< "" !wi
vector<char>&
endsnippet
snippet vvc< "" !wi
vector<vector<char>>
endsnippet
snippet vvc<& "" !wi
vector<vector<char>>&
endsnippet
snippet vvc&< "" !wi
vector<vector<char>>&
endsnippet
snippet vs< "" !wi
vector<string>
endsnippet
snippet vs&< "" !wi
vector<string>&
endsnippet

snippet si< "" !wi
stack<int>
endsnippet
snippet sN< "" !wi
stack<Node*>
endsnippet
snippet qN< "" !wi
queue<Node*>
endsnippet

snippet sei "" !b
set<int>
endsnippet
snippet usi< "" !b
unordered_set<int>
endsnippet
snippet us< "" !b
unordered_set<${1:int}>
endsnippet

snippet umii< "" !b
unordered_map<int, int>
endsnippet
snippet umNi< "" !b
unordered_map<Node*, int>
endsnippet

snippet usingv
using std::vector;
endsnippet
snippet usings
using std::string;
endsnippet
snippet usingcout
using std::cout;
endsnippet

snippet usname "" !b
using namespace $1;
endsnippet